require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

platform :ios, '11.0'

target 'CarDamageDetect' do
  config = use_native_modules!

  use_react_native!(
    :path => config[:reactNativePath],
    # to enable hermes on iOS, change `false` to `true` and then install pods
    :hermes_enabled => false
  )

  target 'CarDamageDetectTests' do
    inherit! :complete
    # Pods for testing
  end
  
  permissions_path = '../node_modules/react-native-permissions/ios'
  pod 'Permission-Camera', :path => "#{permissions_path}/Camera"

  # Enables Flipper.
  #
  # Note that if you have use_frameworks! enabled, Flipper will not work and
  # you should disable the next line.
  use_flipper!()

  post_install do |installer|
    react_native_post_install(installer)
    __apply_Xcode_12_5_M1_post_install_workaround(installer)
    
    # ---- fix OpenALPR ----------------------------------------
    installer.pods_project.targets.each do |target|
      if target.name == "Pods-CarDamageDetect"
          puts "Updating #{target.name} -weak library usage"
          target.build_configurations.each do |config|
              xcconfig_path = config.base_configuration_reference.real_path
              xcconfig = File.read(xcconfig_path)
              new_xcconfig = xcconfig.sub('-weak_library /usr/lib/libstdc++.6.0.9.dylib', '')
              File.open(xcconfig_path, "w") { |file| file << new_xcconfig }
          end
      end
    end
    # ----------------------------------------------------------
    
    # ---- fix xcode 14 ----------------------------------------
    installer.pods_project.targets.each do |target|
      if target.respond_to?(:product_type) and target.product_type == "com.apple.product-type.bundle"
        target.build_configurations.each do |config|
            config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
        end
      end
    end
    # ---- end fix xcode 14 ----------------------------------------
    
  end
end
